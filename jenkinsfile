pipeline {
  options {
    timeout(time: 1, unit: 'HOURS')
    skipDefaultCheckout false
  }
  environment {
    DOCKER_PROXY = "registry.dev.lanehealth.com/proxy_cache/library/"
  }
  agent {
    kubernetes {
      inheritFrom "backend"
    }
  } 
  stages {
    stage('Run automated checks') {
        steps {
            script{
             container('docker-client') {
                 docker.image('selenoid/vnc:chrome_86.0').pull()
             }
              container('maven') {
                 sh script: "export DOCKER_PROXY=${env.DOCKER_PROXY}; mvn test -DSHOULD_START_SELENOID=true", label: 'Run checks'
              }
          }

        }
      post {
          always {
          container('maven') {
              script {
                  sh script: "chmod -R 777 $WORKSPACE/allure-results", label: 'fixing permissions for allure'
              }
            }
            allure includeProperties: false, jdk: '', report: '$WORKSPACE/allure-report', results: [[path: 'java-ui-checks/allure-results']]
          }
          success {
            slackSend color: 'good', tokenCredentialId: 'slack-api-token', botUser: false, channel: '#dev_jenkins', message: "✅ ${env.BUILD_URL}|${env.JOB_NAME}. (<https://jenkins.dev.lanehealth.com/job/LaneHealth/job/java-ui-checks/job/$BRANCH_NAME/$BUILD_NUMBER/allure/|Allure report>)"
          }
          failure {
            slackSend color: 'danger', tokenCredentialId: 'slack-api-token', botUser: false, channel: '#dev_jenkins', message: "❌ ${env.BUILD_URL}|${env.JOB_NAME}. (<https://jenkins.dev.lanehealth.com/job/LaneHealth/job/java-ui-checks/job/$BRANCH_NAME/$BUILD_NUMBER/allure/|Allure report>)"
          }
      }
    }
    }
}